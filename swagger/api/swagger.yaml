openapi: 3.0.3
info:
  title: Meltwater API
  description: The Meltwater Public API
  contact:
    name: Meltwater Support
    url: https://developer.meltwater.com/
    email: support@api.meltwater.com
  version: "1.0"
servers:
- url: https://api.meltwater.com/
security:
- apikey: []
tags:
- name: Recurring Exports
  description: Manage Recurring Exports
- name: Searches
  description: Manage Saved Searches
- name: Source Selections
  description: Query Source Selections
paths:
  /v3/exports/recurring:
    get:
      tags:
      - Recurring Exports
      summary: Get a list of all your recurring exports
      operationId: list_recurring_exports
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecurringExportListResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bad Request'
        "401":
          description: Unauthorized Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized request'
        "403":
          description: Permission Denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission denied'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Not Found'
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unprocessable entity'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Internal Server Error'
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service Unavailable'
    post:
      tags:
      - Recurring Exports
      summary: Creates a new recurring export
      operationId: create_recurring_export
      parameters:
      - name: company_id
        in: query
        description: Company which owns the given search_id. If not specified your
          default company is used.
        required: false
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: |
          Export object to create.

          The `timezone` field specifies what timezone the `window_time` field should be interpreted as.

          The `window_time_unit` field determines the size of the export window and often the export will be refreshed.

          Please see the Model Schema for possible values of `window_time_unit`.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecurringExportRequest'
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecurringExportResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bad Request'
        "401":
          description: Unauthorized Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized request'
        "403":
          description: Permission Denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission denied'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Not Found'
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unprocessable entity'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Internal Server Error'
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service Unavailable'
  /v3/exports/recurring/{id}:
    get:
      tags:
      - Recurring Exports
      summary: Get details of a recurring export
      operationId: show_recurring_export
      parameters:
      - name: id
        in: path
        description: Export id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 123
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecurringExportResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bad Request'
        "401":
          description: Unauthorized Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized request'
        "403":
          description: Permission Denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission denied'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Not Found'
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unprocessable entity'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Internal Server Error'
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service Unavailable'
    delete:
      tags:
      - Recurring Exports
      summary: Removes an existing recurring export
      operationId: delete_recurring_export
      parameters:
      - name: id
        in: path
        description: Export id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 123
      responses:
        "204":
          description: No content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bad Request'
        "401":
          description: Unauthorized Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized request'
        "403":
          description: Permission Denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission denied'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Not Found'
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unprocessable entity'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Internal Server Error'
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service Unavailable'
  /v3/searches:
    get:
      tags:
      - Searches
      summary: Get a list of all your searches
      operationId: list_searches
      parameters:
      - name: company_id
        in: query
        description: Company which owns the given search. If not specified your default
          company is used.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: include_query
        in: query
        description: "Include query object in searches, default \"false\""
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: query_type
        in: query
        description: "Only return searches of the specified query type, if omitted\
          \ searches of all query types will be returned"
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - boolean
          - keyword
          - combined
      responses:
        "200":
          description: List of Searches
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchListResponse'
              examples:
                Search List No Queries:
                  summary: Search listing without queries included
                  value:
                    searches:
                    - type: news
                      category: mi
                      updated: 2020-08-23T08:25:56Z
                      id: 1025
                      name: Electric Cars
                      search_id: 1025
                    - type: social
                      category: explore
                      updated: 2020-08-23T08:25:56Z
                      id: 1027
                      name: Pokemon
                      search_id: 1027
                Search List With Queries:
                  summary: Search listing with queries included
                  value:
                    searches:
                    - type: news
                      category: mi
                      updated: 2020-08-23T08:25:56Z
                      id: 1024
                      name: Electric Cars
                      query:
                        source_selection_id: 1
                        case_sensitivity: "no"
                        boolean: Tesla OR (Volvo NEAR electric)
                        type: boolean
                      search_id: 1024
                    - type: social
                      category: explore
                      updated: 2020-08-23T08:25:56Z
                      id: 1026
                      name: Pokemon
                      query:
                        filter_set:
                          id: 123456
                          name: my filter set
                          subtype: custom
                          type: saved
                        case_sensitivity: "no"
                        not_keywords: []
                        any_keywords:
                        - Pokemon
                        - Pokémon
                        all_keywords: []
                        type: keyword
                      search_id: 1026
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
      security:
      - apikey: []
    post:
      tags:
      - Searches
      summary: Create a search
      operationId: create_search
      parameters:
      - name: company_id
        in: query
        description: Company which owns the given search. If not specified your default
          company is used.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: dry_run
        in: query
        description: "If set to \"true\" only performs validation of the search, does\
          \ not create the resource on success. Default \"false\"."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      requestBody:
        description: A single search request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SingleSearchRequest'
            examples:
              BooleanMi:
                summary: Example boolean query
                value:
                  search:
                    type: news
                    name: Example boolean query
                    query:
                      source_selection_id: 123
                      case_sensitivity: "yes"
                      boolean: Tesla OR (Volvo NEAR electric)
                      type: boolean
              BooleanExplore:
                summary: Example explore boolean query
                value:
                  search:
                    type: news
                    name: Example explore boolean query
                    query:
                      filter_set:
                        id: 123
                        type: saved
                      case_sensitivity: "yes"
                      boolean: Tesla OR (Volvo NEAR electric)
                      type: boolean
                    category: explore
              KeywordMi:
                summary: Example keyword query
                value:
                  search:
                    type: social
                    name: Example keyword query
                    query:
                      source_selection_id: 456
                      case_sensitivity: hybrid
                      not_keywords:
                      - Vodka
                      any_keywords:
                      - Tesla
                      - Volvo
                      all_keywords:
                      - Car
                      type: keyword
                    category: mi
              KeywordExplore:
                summary: Example explore keyword query
                value:
                  search:
                    type: social
                    name: Example explore keyword query
                    query:
                      filter_set:
                        id: 123
                        type: saved
                      case_sensitivity: hybrid
                      not_keywords:
                      - Vodka
                      any_keywords:
                      - Tesla
                      - Volvo
                      all_keywords:
                      - Car
                      type: keyword
                    category: explore
              CombinedExplore:
                summary: Example explore combined query
                value:
                  search:
                    type: social
                    name: Example explore combined query
                    query:
                      filter_set:
                        id: 123
                        type: saved
                      not_searches:
                      - 1
                      any_searches:
                      - 2
                      all_searches:
                      - 3
                      type: combined
                    category: explore
        required: true
      responses:
        "201":
          description: A single Search
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleSearch'
              examples:
                Boolean MI Search:
                  summary: Boolean MI Example with a Query
                  value:
                    search:
                      type: news
                      category: mi
                      updated: 2020-08-23T08:25:56Z
                      id: 1024
                      name: Electric Cars
                      query:
                        source_selection_id: 1
                        case_sensitivity: "no"
                        boolean: Tesla OR (Volvo NEAR electric)
                        type: boolean
                      search_id: 1024
                Boolean MI Search No Query:
                  summary: Boolean MI Search with query hidden
                  value:
                    search:
                      type: news
                      category: mi
                      updated: 2020-08-23T08:25:56Z
                      id: 1025
                      name: Electric Cars
                      search_id: 1025
                Keyword Explore Search:
                  summary: Keyword Explore Search Example with a Query
                  value:
                    search:
                      type: social
                      category: explore
                      updated: 2020-08-23T08:25:56Z
                      id: 1026
                      name: Pokemon
                      query:
                        filter_set:
                          id: 123456
                          name: my filter set
                          subtype: custom
                          type: saved
                        case_sensitivity: "no"
                        not_keywords: []
                        any_keywords:
                        - Pokemon
                        - Pokémon
                        all_keywords: []
                        type: keyword
                      search_id: 1026
                Keyword Explore Search No Query:
                  summary: Keyword Explore Search Example with query hidden
                  value:
                    search:
                      type: social
                      category: explore
                      updated: 2020-08-23T08:25:56Z
                      id: 1027
                      name: Pokemon
                      search_id: 1027
        "204":
          description: No content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
      security:
      - apikey: []
  /v3/searches/{id}:
    get:
      tags:
      - Searches
      summary: Get an individual search
      operationId: get_search
      parameters:
      - name: id
        in: path
        description: Search id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
        example: 1234
      - name: company_id
        in: query
        description: Company which owns the given search. If not specified your default
          company is used.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: A single Search
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleSearch'
              examples:
                Boolean MI Search:
                  summary: Boolean MI Example with a Query
                  value:
                    search:
                      type: news
                      category: mi
                      updated: 2020-08-23T08:25:56Z
                      id: 1024
                      name: Electric Cars
                      query:
                        source_selection_id: 1
                        case_sensitivity: "no"
                        boolean: Tesla OR (Volvo NEAR electric)
                        type: boolean
                      search_id: 1024
                Boolean MI Search No Query:
                  summary: Boolean MI Search with query hidden
                  value:
                    search:
                      type: news
                      category: mi
                      updated: 2020-08-23T08:25:56Z
                      id: 1025
                      name: Electric Cars
                      search_id: 1025
                Keyword Explore Search:
                  summary: Keyword Explore Search Example with a Query
                  value:
                    search:
                      type: social
                      category: explore
                      updated: 2020-08-23T08:25:56Z
                      id: 1026
                      name: Pokemon
                      query:
                        filter_set:
                          id: 123456
                          name: my filter set
                          subtype: custom
                          type: saved
                        case_sensitivity: "no"
                        not_keywords: []
                        any_keywords:
                        - Pokemon
                        - Pokémon
                        all_keywords: []
                        type: keyword
                      search_id: 1026
                Keyword Explore Search No Query:
                  summary: Keyword Explore Search Example with query hidden
                  value:
                    search:
                      type: social
                      category: explore
                      updated: 2020-08-23T08:25:56Z
                      id: 1027
                      name: Pokemon
                      search_id: 1027
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
      security:
      - apikey: []
    put:
      tags:
      - Searches
      summary: Update an individual search
      operationId: update_search
      parameters:
      - name: id
        in: path
        description: Search id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
        example: 1234
      - name: company_id
        in: query
        description: Company which owns the given search. If not specified your default
          company is used.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: dry_run
        in: query
        description: "If set to \"true\" only performs validation of the search, does\
          \ not create the resource on success. Default \"false\"."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      requestBody:
        description: A single search request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SingleSearchRequest'
            examples:
              BooleanMi:
                summary: Example boolean query
                value:
                  search:
                    type: news
                    name: Example boolean query
                    query:
                      source_selection_id: 123
                      case_sensitivity: "yes"
                      boolean: Tesla OR (Volvo NEAR electric)
                      type: boolean
              BooleanExplore:
                summary: Example explore boolean query
                value:
                  search:
                    type: news
                    name: Example explore boolean query
                    query:
                      filter_set:
                        id: 123
                        type: saved
                      case_sensitivity: "yes"
                      boolean: Tesla OR (Volvo NEAR electric)
                      type: boolean
                    category: explore
              KeywordMi:
                summary: Example keyword query
                value:
                  search:
                    type: social
                    name: Example keyword query
                    query:
                      source_selection_id: 456
                      case_sensitivity: hybrid
                      not_keywords:
                      - Vodka
                      any_keywords:
                      - Tesla
                      - Volvo
                      all_keywords:
                      - Car
                      type: keyword
                    category: mi
              KeywordExplore:
                summary: Example explore keyword query
                value:
                  search:
                    type: social
                    name: Example explore keyword query
                    query:
                      filter_set:
                        id: 123
                        type: saved
                      case_sensitivity: hybrid
                      not_keywords:
                      - Vodka
                      any_keywords:
                      - Tesla
                      - Volvo
                      all_keywords:
                      - Car
                      type: keyword
                    category: explore
              CombinedExplore:
                summary: Example explore combined query
                value:
                  search:
                    type: social
                    name: Example explore combined query
                    query:
                      filter_set:
                        id: 123
                        type: saved
                      not_searches:
                      - 1
                      any_searches:
                      - 2
                      all_searches:
                      - 3
                      type: combined
                    category: explore
        required: true
      responses:
        "200":
          description: A single Search
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleSearch'
              examples:
                Boolean MI Search:
                  summary: Boolean MI Example with a Query
                  value:
                    search:
                      type: news
                      category: mi
                      updated: 2020-08-23T08:25:56Z
                      id: 1024
                      name: Electric Cars
                      query:
                        source_selection_id: 1
                        case_sensitivity: "no"
                        boolean: Tesla OR (Volvo NEAR electric)
                        type: boolean
                      search_id: 1024
                Boolean MI Search No Query:
                  summary: Boolean MI Search with query hidden
                  value:
                    search:
                      type: news
                      category: mi
                      updated: 2020-08-23T08:25:56Z
                      id: 1025
                      name: Electric Cars
                      search_id: 1025
                Keyword Explore Search:
                  summary: Keyword Explore Search Example with a Query
                  value:
                    search:
                      type: social
                      category: explore
                      updated: 2020-08-23T08:25:56Z
                      id: 1026
                      name: Pokemon
                      query:
                        filter_set:
                          id: 123456
                          name: my filter set
                          subtype: custom
                          type: saved
                        case_sensitivity: "no"
                        not_keywords: []
                        any_keywords:
                        - Pokemon
                        - Pokémon
                        all_keywords: []
                        type: keyword
                      search_id: 1026
                Keyword Explore Search No Query:
                  summary: Keyword Explore Search Example with query hidden
                  value:
                    search:
                      type: social
                      category: explore
                      updated: 2020-08-23T08:25:56Z
                      id: 1027
                      name: Pokemon
                      search_id: 1027
        "204":
          description: No content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
      security:
      - apikey: []
    delete:
      tags:
      - Searches
      summary: Delete an individual search
      operationId: delete_search
      parameters:
      - name: id
        in: path
        description: Search id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
        example: 1234
      - name: company_id
        in: query
        description: Company which owns the given search. If not specified your default
          company is used.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "204": {}
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            '*/*':
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidPermissionsResponse'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            '*/*':
              schema:
                $ref: '#/components/schemas/MissingResourceResponse'
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            '*/*':
              schema:
                $ref: '#/components/schemas/UnprocessableEntityCompanyId'
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            '*/*':
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
      security:
      - apikey: []
  /v3/source_selections:
    get:
      tags:
      - Source Selections
      summary: Get a list of all your source selections
      operationId: list_source_selections
      parameters:
      - name: company_id
        in: query
        description: Company which owns the given source selections. If not specified
          your default company is used.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: type
        in: query
        description: Only return source selections with the specified type. If this
          parameter is omitted source selections of all types will be returned.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - news
          - social
          - broadcast
      responses:
        "200":
          description: List of Source Selections
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceSelectionList'
              example:
                source_selections:
                - type: news
                  name: German and english news
                  id: 34512
                  custom: true
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
      security:
      - apikey: []
  /v3/searches/{id}/count:
    get:
      tags:
      - Searches
      summary: Get an approximate count of results for the search over a particular
        period
      operationId: search_count
      parameters:
      - name: id
        in: path
        description: Search id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
        example: 1234
      - name: company_id
        in: query
        description: Company which owns the given search. If not specified your default
          company is used.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: start_date
        in: query
        description: "The start date of the search to count result for. Default: `two\
          \ weeks ago` in ISO8601 format."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: end_date
        in: query
        description: "The end date of the search to count result for. Default: `now`\
          \ in ISO8601 format."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      responses:
        "200":
          description: Search Count
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchCountResponse'
              example:
                count:
                  total: 901382
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
      security:
      - apikey: []
  /v3/filter_sets:
    get:
      tags:
      - Filter Sets
      summary: Get a list of all search filter sets
      operationId: list_filter_sets
      parameters:
      - name: company_id
        in: query
        description: Company which owns the given filter sets. If not specified your
          default company is used.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: include_quickpicks
        in: query
        description: "Include meltwater-provided QUICKPICK filter sets, default \"\
          false\""
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: List of Filter Sets
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilterSetList'
              example:
                filter_sets:
                - id: 123
                  name: English and from the UK
                  subtype: custom
                  type: saved
                - id: 456
                  name: Well known french journalists
                  subtype: quickpick
                  type: saved
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
      security:
      - apikey: []
components:
  schemas:
    SingleSearchRequest:
      title: Search Resource
      required:
      - search
      type: object
      properties:
        search:
          $ref: '#/components/schemas/SearchRequestV2'
      additionalProperties: false
      description: Search Resource
    SearchRequestV2:
      title: Search
      required:
      - name
      - query
      - type
      type: object
      properties:
        type:
          type: string
          description: The type of content that the search is for
          enum:
          - news
          - social
          - broadcast
        name:
          type: string
          description: The name associated with this search
          example: Electric cars
        query:
          $ref: '#/components/schemas/Query'
        category:
          type: string
          description: "The category of search to create this under, defaults to `mi`"
          enum:
          - mi
          - explore
        id:
          type: integer
          description: Identifier
          example: 1024
      additionalProperties: false
      description: Search
      example:
        type: news
        query:
          type: boolean
          source_selection_id: 1
          case_sensitivity: false
          boolean: Tesla OR (Volvo NEAR electric)
        name: Electric cars
    Query:
      description: Query associated with a search
      discriminator:
        propertyName: Type_
        mapping:
          boolean: '#/components/schemas/BooleanQuery'
          keyword: '#/components/schemas/KeywordQuery'
          combined: '#/components/schemas/CombinedQuery'
      oneOf:
      - $ref: '#/components/schemas/BooleanQuery'
      - $ref: '#/components/schemas/KeywordQuery'
      - $ref: '#/components/schemas/CombinedQuery'
    BooleanQuery:
      required:
      - boolean
      - case_sensitivity
      type: object
      properties:
        source_selection_id:
          type: integer
          description: The optional source selection id for the search query (mi only)
          format: int64
        filter_set:
          $ref: '#/components/schemas/FilterSet'
        case_sensitivity:
          type: string
          description: The case sensitivity for this query
          enum:
          - "yes"
          - "no"
          - hybrid
        boolean:
          type: string
          description: The boolean query string
    FilterSet:
      description: The optional Filter Set to apply to this search (explore only)
      discriminator:
        propertyName: Type_
        mapping:
          saved: '#/components/schemas/SavedFilterSet'
          embedded: '#/components/schemas/EmbeddedFilterSet'
      oneOf:
      - $ref: '#/components/schemas/SavedFilterSet'
      - $ref: '#/components/schemas/EmbeddedFilterSet'
    SavedFilterSet:
      required:
      - id
      type: object
      properties:
        id:
          type: integer
          description: ID number for the Saved Filter Set
          format: int64
        name:
          type: string
          description: "Name of the Saved Filter Set, is optional when referencing\
            \ one"
        subtype:
          type: string
          description: "Type of Saved Filter Set, may be CUSTOM for user-created or\
            \ QUICKPICK for meltwater-created, is optional when referencing one"
          enum:
          - custom
          - quickpick
    EmbeddedFilterSet:
      type: object
    KeywordQuery:
      required:
      - case_sensitivity
      type: object
      properties:
        source_selection_id:
          type: integer
          description: The optional source selection id for the search query (mi only)
          format: int64
        filter_set:
          $ref: '#/components/schemas/FilterSet'
        case_sensitivity:
          type: string
          description: The case sensitivity for this query
          enum:
          - "yes"
          - "no"
          - hybrid
        not_keywords:
          type: array
          description: None of these keywords should match
          items:
            type: string
        any_keywords:
          type: array
          description: At least one of these keywords must match
          items:
            type: string
        all_keywords:
          type: array
          description: All of these keywords must match
          items:
            type: string
    CombinedQuery:
      type: object
      properties:
        source_selection_id:
          type: integer
          description: The optional source selection id for the search query (mi only)
          format: int64
        filter_set:
          $ref: '#/components/schemas/FilterSet'
        not_searches:
          type: array
          description: None of these searches should match
          items:
            type: integer
            format: int64
        any_searches:
          type: array
          description: At least one of these searches must match
          items:
            type: integer
            format: int64
        all_searches:
          type: array
          description: All of these searches must match
          items:
            type: integer
            format: int64
    Errors:
      required:
      - type
      type: object
      properties:
        errors:
          type: array
          description: List of problems with the request
          items:
            $ref: '#/components/schemas/ErrorDetails'
        type:
          type: string
          enum:
          - NotFound
          - ServiceUnavailable
          - Unauthorized
          - ValidationFailed
      description: Errors
      discriminator:
        propertyName: type
    ErrorDetails:
      required:
      - details
      - title
      - type
      type: object
      properties:
        type:
          type: string
          description: Category of error
        title:
          type: string
          description: Title of error
        details:
          type: string
          description: Details about the error
    SingleSearch:
      title: Search Resource
      required:
      - search
      type: object
      properties:
        search:
          $ref: '#/components/schemas/SearchV2'
      additionalProperties: false
      description: Search Resource
      example:
        search:
          updated: 2020-08-23T08:25:56.000Z
          type: news
          search_id: 1999
          query:
            type: boolean
            source_selection_id: 1
            case_sensitivity: false
            boolean: Tesla OR (Volvo NEAR electric)
          name: Electric cars
          id: 1999
    SearchV2:
      title: Search
      required:
      - category
      - id
      - name
      - type
      type: object
      properties:
        type:
          type: string
          description: The type of content that the search is for
          enum:
          - news
          - social
          - broadcast
        category:
          type: string
          enum:
          - mi
          - explore
        updated:
          type: string
          description: UTC date time (in ISO-8601 format) when the search was last
            updated
          format: date-time
          example: 2020-08-23T08:25:56Z
        id:
          type: integer
          description: Identifier
          format: int64
          example: 1024
        name:
          type: string
          description: Search name
          example: Electric cars
        query:
          $ref: '#/components/schemas/Query'
        search_id:
          type: integer
          description: DEPRECATED. Use "id" instead.
          format: int64
          example: 1024
      additionalProperties: false
      description: Search
      example:
        updated: 2020-08-23T08:25:56.000Z
        type: news
        search_id: 1999
        query:
          type: boolean
          source_selection_id: 1
          case_sensitivity: false
          boolean: Tesla OR (Volvo NEAR electric)
        name: Electric cars
        id: 1999
    Unit:
      type: object
    SearchListResponse:
      title: Search List Response
      required:
      - searches
      type: object
      properties:
        searches:
          type: array
          items:
            $ref: '#/components/schemas/SearchV2'
      additionalProperties: false
      description: Search List Response
      example:
        searches:
        - updated: 2020-08-23T08:25:56.000Z
          type: news
          search_id: 1999
          query:
            type: boolean
            source_selection_id: 1
            case_sensitivity: false
            boolean: Tesla OR (Volvo NEAR electric)
          name: Electric cars
          id: 1999
        - updated: 2020-08-23T08:25:56.000Z
          type: news
          search_id: 1999
          query:
            type: boolean
            source_selection_id: 1
            case_sensitivity: false
            boolean: Tesla OR (Volvo NEAR electric)
          name: Electric cars
          id: 1999
    SourceSelectionList:
      title: Source Selection List
      type: array
      properties:
        source_selections:
          type: array
          items:
            $ref: '#/components/schemas/SourceSelection'
      description: Source Selection List
      items:
        $ref: '#/components/schemas/SourceSelection'
      x-schema-name: SourceSelectionList
    SourceSelection:
      title: Source Selection
      required:
      - custom
      - id
      - name
      - type
      type: object
      properties:
        type:
          type: string
          description: The type of searches this source selection can be used for
          example: news
          enum:
          - news
          - social
          - broadcast
        name:
          type: string
          description: Source selection name
          example: German and english news
        id:
          type: integer
          description: Source selection unique identifier
          format: int64
          example: 34512
        custom:
          type: boolean
          description: If this source selection is a custom one or not
          example: true
      additionalProperties: false
      description: Source Selection
      example:
        type: news
        name: All Sources
        id: 1
        custom: false
    CompanyList:
      title: Company List
      type: array
      properties:
        companies:
          type: array
          items:
            $ref: '#/components/schemas/Company'
      description: Company List
      items:
        $ref: '#/components/schemas/Company'
    Company:
      title: Company
      required:
      - id
      - name
      type: object
      properties:
        name:
          type: string
          description: Company name
          example: Meltwater
        id:
          type: string
          description: Company unique identifier
          example: 61d07a1eb6b501051b5af3d7
      additionalProperties: false
      description: Company
      example:
        name: Meltwater
        id: 61d07a1eb6b501051b5af3d7
    TagList:
      title: Tag List
      type: array
      properties:
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
      description: Tag List
      items:
        $ref: '#/components/schemas/Tag'
    Tag:
      title: Tag
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: Tag name
          example: My Custom Tag
      additionalProperties: false
      description: Tag
      example:
        name: My Custom Tag
    SearchCountResponse:
      title: Search Count
      required:
      - count
      type: object
      properties:
        count:
          $ref: '#/components/schemas/Count'
      additionalProperties: false
      description: Number of results for the search
      example:
        count:
          total: 901382
    Count:
      title: Count
      required:
      - total
      type: object
      properties:
        total:
          type: integer
          description: Total count
          format: int64
          example: 901382
      additionalProperties: false
      description: Number of results for the search
      example:
        total: 901382
    FilterSetList:
      type: object
      properties:
        filter_sets:
          type: array
          items:
            $ref: '#/components/schemas/FilterSet'
      example:
        filter_sets:
        - ""
        - ""
    ValidationFailed:
      required:
      - errors
      - message
      type: object
      properties:
        message:
          type: string
          description: "A message describing, in brief, the problem."
        errors:
          type: object
          additionalProperties:
            uniqueItems: true
            type: array
            items:
              type: string
              description: A description of the problem encountered on this field.
          description: "A breakdown of each problem encountered, by field."
      example:
        message: Validation Failed
        errors:
          start:
          - '''foo'' is not a valid ISO 8601 local timestamp'
          end:
          - Missing required parameter
    SummaryResponse:
      required:
      - sentiment
      - time_series
      - top_countries
      - top_languages
      - unique_authors
      - volume
      type: object
      properties:
        unique_authors:
          type: integer
          format: int64
        top_countries:
          type: array
          items:
            $ref: '#/components/schemas/CountryStats'
        sentiment:
          $ref: '#/components/schemas/Sentiments'
        top_languages:
          type: array
          items:
            $ref: '#/components/schemas/LanguageStats'
        time_series:
          type: array
          items:
            $ref: '#/components/schemas/Day'
        volume:
          $ref: '#/components/schemas/Volume'
      description: SummaryResponse
    Volume:
      required:
      - document_count
      type: object
      properties:
        document_count:
          type: integer
          format: int64
        per_day:
          type: integer
          format: int64
        per_hour:
          type: integer
          format: int64
      description: Volume
    CountryStats:
      required:
      - country_code
      - document_count
      - percentage
      type: object
      properties:
        country_code:
          type: string
        document_count:
          type: integer
          format: int64
        percentage:
          type: number
          format: double
      description: CountryStats
    TopSharedResponse:
      required:
      - document_count
      - results
      type: object
      properties:
        document_count:
          type: integer
          format: int64
        results:
          type: array
          items:
            $ref: '#/components/schemas/Document'
      description: TopSharedResponse
    Twitter:
      type: object
      properties:
        followers:
          type: integer
          format: int64
        following:
          type: integer
          format: int64
        external_id:
          type: string
      description: Twitter
    NotFound:
      required:
      - errors
      - message
      type: object
      properties:
        message:
          type: string
          description: "A message describing, in brief, the problem."
        errors:
          type: object
          additionalProperties:
            uniqueItems: true
            type: array
            items:
              type: string
              description: A description of the problem encountered on this field.
          description: "A breakdown of each problem encountered, by field."
      example:
        message: Not Found
        errors:
          :searchId:
          - A Saved Search with that ID could not be found
    SentimentStats:
      required:
      - document_count
      - percentage
      type: object
      properties:
        document_count:
          type: integer
          format: int64
        percentage:
          type: number
          format: double
      description: SentimentStats
    Entity:
      required:
      - document_count
      - entity
      - percentage
      type: object
      properties:
        entity:
          type: string
        document_count:
          type: integer
          format: int64
        percentage:
          type: number
          format: double
      description: Entity
    Day:
      required:
      - date
      - document_count
      - hours
      type: object
      properties:
        date:
          title: "An ISO8601 date, excluding time and timezone/offset."
          type: string
          description: "An ISO8601 date, excluding time and timezone/offset.\n\nThe\
            \ year, month and day formatted according to ISO8601. The date\nrepresents\
            \ the local date at the timezone given in the `tz` parameter."
          format: date
        document_count:
          type: integer
          format: int64
        hours:
          type: array
          items:
            $ref: '#/components/schemas/Hour'
      description: Day
    LanguageStats:
      required:
      - document_count
      - language_code
      - percentage
      type: object
      properties:
        language_code:
          type: string
        document_count:
          type: integer
          format: int64
        percentage:
          type: number
          format: double
      description: LanguageStats
    AnalyticsTag:
      required:
      - document_count
      - percentage
      - tag
      type: object
      properties:
        tag:
          type: string
        document_count:
          type: integer
          format: int64
        percentage:
          type: number
          format: double
      description: Tag
    AnalyticsServiceUnavailable:
      description: ServiceUnavailable
      example:
        message: Service Unavailable
        errors: {}
      allOf:
      - $ref: '#/components/schemas/Errors'
      - type: object
        properties:
          message:
            type: string
        description: ServiceUnavailable
    Hour:
      required:
      - document_count
      - timestamp
      type: object
      properties:
        timestamp:
          title: An ISO8601 date-time.
          type: string
          description: "An ISO8601 date-time, including timezone offset.\n\nThe timezone\
            \ offset is an offset in minutes from UTC."
          format: date-time
        document_count:
          type: integer
          format: int64
      description: Hour
    Result:
      required:
      - author
      - document_count
      type: object
      properties:
        author:
          $ref: '#/components/schemas/Author'
        document_count:
          type: integer
          format: int64
      description: Result
    Document:
      required:
      - author
      - shares
      type: object
      properties:
        author:
          $ref: '#/components/schemas/Author'
        url:
          type: string
        country_code:
          type: string
        shares:
          $ref: '#/components/schemas/Shares'
        language_code:
          type: string
        external_id:
          type: string
        created_at:
          title: An ISO8601 date-time.
          type: string
          description: "An ISO8601 date-time, including timezone offset.\n\nThe timezone\
            \ offset is an offset in minutes from UTC."
          format: date-time
      description: Document
    Author:
      type: object
      properties:
        username:
          type: string
        display_name:
          type: string
        twitter:
          $ref: '#/components/schemas/Twitter'
        avatar_url:
          type: string
        authority:
          type: integer
          format: int64
      description: Author
    Shares:
      type: object
      properties:
        retweets:
          type: integer
          format: int64
        likes:
          type: integer
          format: int64
      description: Shares
    Keyphrase:
      required:
      - document_count
      - keyphrase
      - percentage
      type: object
      properties:
        keyphrase:
          type: string
        document_count:
          type: integer
          format: int64
        percentage:
          type: number
          format: double
      description: Keyphrase
    TopTagsResponse:
      required:
      - document_count
      - tags
      type: object
      properties:
        document_count:
          type: integer
          format: int64
        tags:
          type: array
          items:
            $ref: '#/components/schemas/AnalyticsTag'
      description: TopTagsResponse
    TopKeyphrasesResponse:
      required:
      - document_count
      - keyphrases
      type: object
      properties:
        document_count:
          type: integer
          format: int64
        keyphrases:
          type: array
          items:
            $ref: '#/components/schemas/Keyphrase'
      description: TopKeyphrasesResponse
    Unauthorized:
      required:
      - errors
      - message
      type: object
      properties:
        message:
          type: string
          description: "A message describing, in brief, the problem."
        errors:
          type: object
          additionalProperties:
            uniqueItems: true
            type: array
            items:
              type: string
              description: A description of the problem encountered on this field.
          description: "A breakdown of each problem encountered, by field."
      example:
        message: Unauthorized
        errors:
          /v1/analytics/:searchId/top_shared:
          - You do not have permission to access this resource.
    Sentiments:
      required:
      - negative
      - neutral
      - positive
      - unknown
      type: object
      properties:
        positive:
          $ref: '#/components/schemas/SentimentStats'
        negative:
          $ref: '#/components/schemas/SentimentStats'
        neutral:
          $ref: '#/components/schemas/SentimentStats'
        unknown:
          $ref: '#/components/schemas/SentimentStats'
      description: Sentiments
    TopEntitiesResponse:
      required:
      - document_count
      - entities
      type: object
      properties:
        document_count:
          type: integer
          format: int64
        entities:
          type: array
          items:
            $ref: '#/components/schemas/Entity'
      description: TopEntitiesResponse
    TopSourcesResponse:
      required:
      - document_count
      - sources
      type: object
      properties:
        document_count:
          type: integer
          format: int64
        sources:
          type: array
          items:
            $ref: '#/components/schemas/Result'
      description: TopSourcesResponse
    ServiceUnavailable:
      title: Service Unavailable
      type: object
      properties:
        errors:
          type: array
          description: List of problems with the request
          items:
            $ref: '#/components/schemas/Error object'
      description: Service Unavailable
      example:
        errors:
        - type: SEARCH
          title: Service unavailable
          details: "Temporarily unable to handle the request, try again later"
    SearchId:
      type: integer
    SearchDetails:
      title: Search details
      required:
      - id
      - name
      type: object
      properties:
        name:
          type: string
          description: Search name
          example: Elections
        id:
          type: integer
          description: Search id
          example: 123
      additionalProperties: false
      example:
        name: Elections
        id: 123
    RecurringExportResult:
      title: Recurring export
      required:
      - company_name
      - id
      - searches
      type: object
      properties:
        window_weekday:
          type: integer
          description: "An integer representation of what day of the week the export\
            \ window starts. Integer values are: Monday=1, Tuesday=2, Wednesday=3,\
            \ Thursday=4, Friday=5, Saturday=6, Sunday=7 Defaults to 1"
          default: 1
        window_time_unit:
          type: string
          description: Window Time Unit. The time unit the export window represents.
            Defaults to "DAY"
          default: DAY
          enum:
          - DAY
          - WEEK
          - MONTH
        window_time:
          type: string
          description: Window Time. The time of day the export window begins.Defaults
            to "00:00:00"
          default: 00:00:00
        window_size:
          type: integer
          description: Window size. The number of 'window_time_unit's the export window
            covers. Defaults to 1
          default: 1
        window_monthday:
          type: integer
          description: "An integer representation of what day of the month the export\
            \ window starts. Integer values 1-28 represent the day of the month e.g.\
            \ 1 represents 1st, 2 represents the 2nd, etc. Integer value 0 represents\
            \ the last day of the month. Defaults to 1"
          default: 1
        updated_at:
          type: string
          description: The datetime the export was last updated
        timezone:
          type: string
          description: Timezone for window_time field. Must be a valid timezone in
            the IANA database. Defaults to "Etc/UTC"
          default: Etc/UTC
        tags:
          type: array
          description: List of tag names used for the export
          items:
            $ref: '#/components/schemas/Tag'
        status_reason:
          type: string
          description: Optional explanation for current status
        status:
          type: string
          description: Current status of the recurring export
          enum:
          - PENDING
          - ACTIVE
          - CANCELLED
        searches:
          type: array
          description: List of searches used for the export
          items:
            $ref: '#/components/schemas/SearchDetails'
        next_run_date:
          type: string
          description: Next Run Date - the datetime on which your export refresh will
            start.
        inserted_at:
          type: string
          description: The datetime the export was created
        id:
          type: integer
          description: ID of the export
        data_url:
          type: string
          description: The URL at which the export data can be retrieved
        company_name:
          type: string
          description: Company the export belongs to
      example:
        window_weekday: 0
        searches:
        - name: Elections
          id: 123
        - name: Elections
          id: 123
        timezone: Etc/UTC
        window_time_unit: DAY
        tags:
        - name: My Custom Tag
        - name: My Custom Tag
        next_run_date: next_run_date
        window_size: 6
        updated_at: updated_at
        company_name: company_name
        id: 5
        status_reason: status_reason
        window_time: 00:00:00
        window_monthday: 1
        inserted_at: inserted_at
        data_url: data_url
        status: PENDING
    RecurringExportResponse:
      title: Recurring export Response
      required:
      - recurring_export
      type: object
      properties:
        recurring_export:
          $ref: '#/components/schemas/RecurringExportResult'
      additionalProperties: false
      description: Recurring export Response
      example:
        recurring_export:
          window_weekday: 0
          searches:
          - name: Elections
            id: 123
          - name: Elections
            id: 123
          timezone: Etc/UTC
          window_time_unit: DAY
          tags:
          - name: My Custom Tag
          - name: My Custom Tag
          next_run_date: next_run_date
          window_size: 6
          updated_at: updated_at
          company_name: company_name
          id: 5
          status_reason: status_reason
          window_time: 00:00:00
          window_monthday: 1
          inserted_at: inserted_at
          data_url: data_url
          status: PENDING
    RecurringExportRequest:
      title: Recurring export request
      type: object
      properties:
        recurring_export:
          $ref: '#/components/schemas/RecurringExport'
      description: POST body for creating a recurring export
    RecurringExportListResponse:
      title: Recurring export list response
      required:
      - recurring_exports
      type: object
      properties:
        recurring_exports:
          $ref: '#/components/schemas/RecurringExportList'
      additionalProperties: false
      description: Recurring export list response
      example:
        recurring_exports:
        - window_weekday: 0
          searches:
          - name: Elections
            id: 123
          - name: Elections
            id: 123
          timezone: Etc/UTC
          window_time_unit: DAY
          tags:
          - name: My Custom Tag
          - name: My Custom Tag
          next_run_date: next_run_date
          window_size: 6
          updated_at: updated_at
          company_name: company_name
          id: 5
          status_reason: status_reason
          window_time: 00:00:00
          window_monthday: 1
          inserted_at: inserted_at
          data_url: data_url
          status: PENDING
        - window_weekday: 0
          searches:
          - name: Elections
            id: 123
          - name: Elections
            id: 123
          timezone: Etc/UTC
          window_time_unit: DAY
          tags:
          - name: My Custom Tag
          - name: My Custom Tag
          next_run_date: next_run_date
          window_size: 6
          updated_at: updated_at
          company_name: company_name
          id: 5
          status_reason: status_reason
          window_time: 00:00:00
          window_monthday: 1
          inserted_at: inserted_at
          data_url: data_url
          status: PENDING
    RecurringExportList:
      title: Results
      type: array
      description: A collection of recurring export results
      items:
        $ref: '#/components/schemas/RecurringExportResult'
      x-schema-name: RecurringExportList
    RecurringExport:
      title: Recurring export
      required:
      - search_ids
      type: object
      properties:
        window_weekday:
          type: integer
          description: "An integer representation of what day of the week the export\
            \ window starts. Integer values are: Monday=1, Tuesday=2, Wednesday=3,\
            \ Thursday=4, Friday=5, Saturday=6, Sunday=7 Defaults to 1"
          default: 1
        window_time_unit:
          type: string
          description: Window Time Unit. The time unit the export window represents.
            Defaults to "DAY"
          default: DAY
          enum:
          - DAY
          - WEEK
          - MONTH
        window_time:
          type: string
          description: Window Time. The time of day the export window begins. Defaults
            to "00:00:00"
          default: 00:00:00
        window_size:
          type: integer
          description: Window size. The number of 'window_time_unit's the export window
            covers Defaults to 1
          default: 1
        window_monthday:
          type: integer
          description: "An integer representation of what day of the month the export\
            \ window starts. Integer values 1-28 represent the day of the month e.g.\
            \ 1 represents 1st, 2 represents the 2nd, etc. Integer value 0 represents\
            \ the last day of the month. Defaults to 1"
          default: 1
        timezone:
          type: string
          description: Timezone for window_time field. Must be a valid timezone in
            the IANA database. Defaults to "Etc/UTC"
          default: Etc/UTC
        tags:
          type: array
          description: List of tag names
          example:
          - tag
          items:
            $ref: '#/components/schemas/Tag'
        search_ids:
          type: array
          description: List of search ids
          example:
          - 123
          items:
            $ref: '#/components/schemas/SearchId'
      description: A recurring export
      example:
        window_time_unit: DAY
        window_time: 00:00:00
        window_size: 1
        timezone: Etc/UTC
        tags:
        - tag
        search_ids:
        - 123
    OneTimeExportResult:
      title: One-time export
      required:
      - company_name
      - end_date
      - id
      - searches
      - start_date
      type: object
      properties:
        updated_at:
          type: string
          description: The datetime the export was last updated
        tags:
          type: array
          description: List of tag names used for the export
          items:
            $ref: '#/components/schemas/Tag'
        status_reason:
          type: string
          description: Optional explanation for current status
        status:
          type: string
          description: Current status of the one-time export
          enum:
          - PENDING
          - FINISHED
          - CANCELLED
          - EXPIRED
        start_date:
          type: string
          description: Start date of the export (UTC) in ISO 8601 format
          format: datetime
          example: 2020-03-25T00:00:00Z
        searches:
          type: array
          description: List of searches used for the export
          items:
            $ref: '#/components/schemas/SearchDetails'
        inserted_at:
          type: string
          description: The datetime the export was created
        id:
          type: integer
          description: ID of the export
        end_date:
          type: string
          description: End date of the export (UTC) in ISO 8601 format
          format: datetime
          example: 2020-03-29T23:59:59Z
        data_url:
          type: string
          description: The URL at which the export data can be retrieved
        company_name:
          type: string
          description: Company the export belongs to
    OneTimeExportResponse:
      title: One-time export Response
      required:
      - onetime_export
      type: object
      properties:
        onetime_export:
          $ref: '#/components/schemas/OneTimeExportResult'
      additionalProperties: false
      description: One-time export Response
    OneTimeExportRequest:
      title: One-time export request
      type: object
      properties:
        onetime_export:
          $ref: '#/components/schemas/OneTimeExport'
      description: POST body for creating a one-time export
    OneTimeExportListResponse:
      title: One-time export list response
      required:
      - onetime_exports
      type: object
      properties:
        onetime_exports:
          $ref: '#/components/schemas/OneTimeExportList'
      additionalProperties: false
      description: One-time export list response
    OneTimeExportList:
      title: Results
      type: array
      description: A collection of one-time export results
      items:
        $ref: '#/components/schemas/OneTimeExportResult'
      x-schema-name: OneTimeExportList
    OneTimeExport:
      title: One-time export
      required:
      - end_date
      - search_ids
      - start_date
      type: object
      properties:
        tags:
          type: array
          description: List of tag names
          example:
          - tag
          items:
            $ref: '#/components/schemas/Tag'
        start_date:
          type: string
          description: |-
            Start date (UTC) in ISO 8601 standard.
            E.g. "2020-03-25T00:00:00Z"
          format: datetime
          example: 2020-03-25T00:00:00Z
        search_ids:
          type: array
          description: List of search ids
          example:
          - 123
          items:
            $ref: '#/components/schemas/SearchId'
        end_date:
          type: string
          description: |-
            End date (UTC) in ISO 8601 standard.
            E.g. "2020-03-29T23:59:59Z"
          format: datetime
          example: 2020-03-29T23:59:59Z
      description: A one-time export
      example:
        tags:
        - tag
        start_date: 2020-03-25T00:00:00Z
        search_ids:
        - 123
        end_date: 2020-03-29T23:59:59Z
    ValidationMetadata:
      title: Metadata
      required:
      - field
      type: object
      properties:
        validation:
          type: string
          description: The cause of the validation error
          example: complexity
          enum:
          - syntax
          - complexity
          - length
          - cast
          - inclusion
          - required
          - content_type
        field:
          type: string
          description: Name of the field that failed its validation checks
          example: boolean
      additionalProperties: true
      description: Metadata for the error
      x-schema-name: ValidationMetadata
    UnprocessableEntityCompanyId:
      title: Invalid company id
      type: object
      properties:
        errors:
          type: array
          description: List of problems with the request
          items:
            $ref: '#/components/schemas/Validation error'
      description: Invalid company id
      example:
        errors:
        - type: VALIDATION
          title: "Validation error for field: company_id"
          meta:
            field: company_id
          details: Company id is expected to contain alphanumeric characters only
    MissingResourceResponse:
      title: Unknown resource
      type: object
      properties:
        errors:
          type: array
          description: List of problems with the request
          items:
            $ref: '#/components/schemas/Error object'
      description: Unknown resource
      example:
        errors:
        - type: SEARCH
          title: Unknown search
          details: The search id (123) you provided is unknown
    InvalidPermissionsResponse:
      title: Invalid Permissions
      type: object
      properties:
        errors:
          type: array
          description: List of problems with the request
          items:
            $ref: '#/components/schemas/Error object'
      description: Invalid Permissions
      example:
        errors:
        - type: SEARCH
          title: Missing company permissions
          details: You do not have enough permissions to manage searches / source
            selections for the given company
    UnauthorizedResponse:
      title: Unauthorized request
      type: object
      properties:
        errors:
          type: array
          description: List of problems with the request
          items:
            $ref: '#/components/schemas/Error object'
      description: Unauthorized request
      example:
        errors:
        - type: AUTH
          title: Unauthorized
          details: Invalid or expired authorization header
    InternalServerErrorResponse:
      title: Internal Server error
      type: object
      properties:
        errors:
          type: array
          description: List of problems with the request
          items:
            $ref: '#/components/schemas/Error object'
      description: Internal Server error
      example:
        errors:
        - type: INTERNAL
          title: Internal Server error
          details: Something went wrong behind the scenes...
    Bad Request:
      title: Bad Request
      type: object
      properties:
        errors:
          type: array
          description: List of problems with the request
          items:
            $ref: '#/components/schemas/Bad Request_errors'
      description: Bad Request
      example:
        errors:
        - type: VALIDATION
          title: Invalid data
          details: Invalid JSON payload
    Unauthorized request:
      title: Unauthorized request
      type: object
      properties:
        errors:
          type: array
          description: List of problems with the request
          items:
            $ref: '#/components/schemas/Bad Request_errors'
      description: Unauthorized request
      example:
        errors:
        - type: AUTH
          title: Unauthorized
          details: Invalid or expired authorization header
    Permission denied:
      title: Permission denied
      type: object
      properties:
        errors:
          type: array
          description: List of problems with the request
          items:
            $ref: '#/components/schemas/Bad Request_errors'
      description: Permission denied
      example:
        errors:
        - type: ENTITLEMENT
          title: Entitlement missing
          details: "You are missing required entitlements, in order to access given\
            \ content: [\"news\", \"social\"]. Please contact your sales representative\
            \ to add the necessary entitlement to your Meltwater account."
    Not Found:
      title: Not Found
      type: object
      properties:
        errors:
          type: array
          description: List of problems with the request
          items:
            $ref: '#/components/schemas/Bad Request_errors'
      description: Not Found
      example:
        errors:
        - type: EXPORT
          title: Unknown resource
          details: The resource id you provided (1234) is unknown
    Unprocessable entity:
      title: Unprocessable entity
      type: object
      properties:
        errors:
          type: array
          description: List of problems with the request
          items:
            $ref: '#/components/schemas/Bad Request_errors'
      description: Unprocessable entity
      example:
        errors:
        - type: VALIDATION
          title: "Validation error for field: window_size"
          details: is not a valid integer
    Internal Server Error:
      title: Internal Server Error
      type: object
      properties:
        errors:
          type: array
          description: List of problems with the request
          items:
            $ref: '#/components/schemas/Bad Request_errors'
      description: Internal Server Error
      example:
        errors:
        - type: INTERNAL
          title: Internal Server error
          details: Something went wrong behind the scenes...
    Service Unavailable:
      title: Service Unavailable
      type: object
      properties:
        errors:
          type: array
          description: List of problems with the request
          items:
            $ref: '#/components/schemas/Bad Request_errors'
      description: Service Unavailable
      example:
        errors:
        - type: SEARCH
          title: Service unavailable
          details: "Temporarily unable to handle the request, try again later"
    Error object:
      title: Error object
      required:
      - details
      - title
      - type
      type: object
      properties:
        type:
          type: string
          description: Category of error
          example: VALIDATION
        title:
          type: string
          description: Title of error
          example: "Validation error for field: type"
        details:
          type: string
          description: Details about the error
          example: This field cannot be updated
      additionalProperties: false
    Validation error:
      title: Validation error
      required:
      - details
      - title
      - type
      type: object
      properties:
        type:
          type: string
          description: Category of error
          example: VALIDATION
        title:
          type: string
          description: Title of error
          example: "Validation error for field: type"
        meta:
          $ref: '#/components/schemas/ValidationMetadata'
        details:
          type: string
          description: Details about the error
          example: This field cannot be updated
      additionalProperties: false
    Bad Request_errors:
      required:
      - details
      - title
      - type
      type: object
      properties:
        type:
          type: string
          description: Category of error
          example: VALIDATION
        title:
          type: string
          description: Title of error
          example: "Validation error for field: type"
        details:
          type: string
          description: Details about the error
          example: This field cannot be updated
      additionalProperties: false
  securitySchemes:
    apikey:
      type: apiKey
      name: apikey
      in: header
